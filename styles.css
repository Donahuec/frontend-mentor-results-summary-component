@font-face {
  font-family: "Hanken Grotesk";
  src: url("./assets/fonts/HankenGrotesk-VariableFont_wght.ttf")
    format("truetype");
  font-weight: 500;
  font-style: normal;
}

:root {
  /* Colors */
  --white: hsl(0, 0%, 100%);
  --veryPaleBlue: hsl(221, 100%, 96%);
  --paleBlue: hsl(221, 100%, 96%);
  --lightLavender: hsl(241, 100%, 89%);
  --lightSlateBlue: hsl(252, 100%, 67%);
  --lightRoyalBlue: hsl(241, 81%, 54%);
  --violetBlue: hsla(256, 72%, 46%, 1);
  --persianBlue: hsla(241, 72%, 46%, 0);

  --lightRedHSL: 0 100% 67%;
  --lightRed: hsl(var(--lightRedHSL));

  --orangeYellowHSL: 39 100% 56%;
  --orangeYellow: hsl(var(--orangeYellowHSL));

  --greenTealHSL: 166 100% 37%;
  --greenTeal: hsl(var(--greenTealHSL));

  --cobaltBlueHSL: 234 85% 45%;
  --cobaltBlue: hsl(var(--cobaltBlueHSL));

  --darkGrayBlueHSL: 224 30% 27%;
  --darkGrayBlue: hsl(var(--darkGrayBlueHSL));

  --metricColor: var(--cobaltBlueHSL);

  /* Font */
  --fontBody: 1.25rem;
  --fontHeaderMid: 1.5rem;
  --fontHeaderLarge: 2rem;
  --fontHeaderXLarge: 4.5rem;
  --fontWeightBold: 700;
  --fontWeightExtraBold: 800;

  /* Sizing */
  --borderRadius: 32px;

  --circleSizeMax: 200px;
  --circleSizeMin: 140px;
  --circleSize: var(--circleSizeMax);
}

@media only screen and (max-width: 736px) {
  :root {
    --circleSize: var(--circleSizeMin);
  }
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body,
html {
  height: 100%;
}

body {
  font-family: "Hanken Grotesk", sans-serif;
  font-optical-sizing: auto;
  font-size: var(--fontBody);
  font-weight: 500;
  letter-spacing: 0px;
  background-color: var(--veryPaleBlue);
}

.attribution {
  position: absolute;
  bottom: 0px;
  width: 100%;
  font-size: 0.75rem;
  text-align: center;
  padding-block: 12px;
  color: var(--darkGrayBlue);
  a {
    color: var(--violetBlue);
  }
}

@media only screen and (max-width: 736px) {
  .attribution {
    position: relative;
  }
}

.sr-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

main {
  min-height: 100%;
  padding-inline: 32px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@media only screen and (max-width: 736px) {
  main {
    padding-inline: 0;
  }
}

article {
  max-width: 736px;
  margin-inline: auto;
  display: flex;
  border-radius: var(--borderRadius);
  background-color: var(--white);
  box-shadow: 0px 30px 60px 0px hsl(var(--darkGrayBlueHSL) / 0.15);
  section {
    flex: 1;
  }
}

@media only screen and (max-width: 736px) {
  article {
    flex-direction: column;
    width: 100%;
    section {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      &.summary {
        border-radius: 0;
      }
    }
  }
}

h2 {
  font-size: var(--fontHeaderMid);
  font-weight: var(--fontWeightBold);
}

section {
  padding: 38px 40px 46px;
  border-radius: var(--borderRadius);
}

.result {
  background: linear-gradient(var(--lightSlateBlue), var(--lightRoyalBlue));
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 24px;
  align-items: center;
  text-align: center;
  color: var(--lightLavender);
}

.result-total {
  background: linear-gradient(var(--violetBlue), var(--persianBlue));
  width: clamp(var(--circleSizeMin), 75%, var(--circleSizeMax));
  max-width: var(--circleSize);
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .score {
    color: var(--white);
    font-size: var(--fontHeaderXLarge);
    font-weight: var(--fontWeightExtraBold);
    line-height: 1;
  }
}

.result-motivator {
  color: var(--white);
  font-size: var(--fontHeaderLarge);
  font-weight: var(--fontWeightBold);
  margin-block: 8px;
}

.summary {
  background-color: var(--white);
}

.metrics {
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding-block: 28px 40px;
}

.metric {
  display: flex;
  justify-content: space-between;
  border-radius: 12px;
  gap: 12px;
  padding: 16px;
  color: hsl(var(--metricColor));
  background-color: hsl(var(--metricColor) / 5%);
  &.green {
    --metricColor: var(--greenTealHSL);
  }
  &.red {
    --metricColor: var(--lightRedHSL);
  }
  &.orange {
    --metricColor: var(--orangeYellowHSL);
  }
}

.metric-score {
  margin-left: auto;
  display: flex;
  text-align: center;
  color: var(--darkGrayBlue);
  .divider,
  .total {
    opacity: 0.5;
  }
  .divider {
    /* non-symmetrical for optical alignment */
    padding-inline: 4px 2px;
  }
}

/* Allows transition on the gradient values */
@property --gradientStart {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}

@property --gradientEnd {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}

button {
  color: var(--white);
  font-weight: var(--fontWeightBold);
  border: none;
  padding: 16px;
  width: 100%;
  border-radius: 128px;
  outline-offset: 4px;
  outline-color: var(--lightRoyalBlue);
  --gradientStart: var(--darkGrayBlue);
  --gradientEnd: var(--darkGrayBlue);
  background: linear-gradient(var(--gradientStart), var(--gradientEnd));
  transition: --gradientStart 250ms ease-in-out, --gradientEnd 250ms ease-in-out;
  &:hover,
  &:focus-visible {
    --gradientStart: var(--lightSlateBlue);
    --gradientEnd: var(--lightRoyalBlue);
    cursor: pointer;
  }
  &:active {
    --gradientEnd: var(--lightRoyalBlue);
    --gradientStart: var(--lightRoyalBlue);
  }
}
